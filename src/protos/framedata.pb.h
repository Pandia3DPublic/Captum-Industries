// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: framedata.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_framedata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_framedata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_framedata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_framedata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_framedata_2eproto;
namespace proto {
class Calibration;
class CalibrationDefaultTypeInternal;
extern CalibrationDefaultTypeInternal _Calibration_default_instance_;
class ColorImage;
class ColorImageDefaultTypeInternal;
extern ColorImageDefaultTypeInternal _ColorImage_default_instance_;
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class DepthImage;
class DepthImageDefaultTypeInternal;
extern DepthImageDefaultTypeInternal _DepthImage_default_instance_;
class FrameData;
class FrameDataDefaultTypeInternal;
extern FrameDataDefaultTypeInternal _FrameData_default_instance_;
class Intrinsics;
class IntrinsicsDefaultTypeInternal;
extern IntrinsicsDefaultTypeInternal _Intrinsics_default_instance_;
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> ::proto::Calibration* Arena::CreateMaybeMessage<::proto::Calibration>(Arena*);
template<> ::proto::ColorImage* Arena::CreateMaybeMessage<::proto::ColorImage>(Arena*);
template<> ::proto::Data* Arena::CreateMaybeMessage<::proto::Data>(Arena*);
template<> ::proto::DepthImage* Arena::CreateMaybeMessage<::proto::DepthImage>(Arena*);
template<> ::proto::FrameData* Arena::CreateMaybeMessage<::proto::FrameData>(Arena*);
template<> ::proto::Intrinsics* Arena::CreateMaybeMessage<::proto::Intrinsics>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace proto {

// ===================================================================

class ColorImage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.ColorImage) */ {
 public:
  ColorImage();
  virtual ~ColorImage();

  ColorImage(const ColorImage& from);
  ColorImage(ColorImage&& from) noexcept
    : ColorImage() {
    *this = ::std::move(from);
  }

  inline ColorImage& operator=(const ColorImage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ColorImage& operator=(ColorImage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ColorImage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ColorImage* internal_default_instance() {
    return reinterpret_cast<const ColorImage*>(
               &_ColorImage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ColorImage& a, ColorImage& b) {
    a.Swap(&b);
  }
  inline void Swap(ColorImage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ColorImage* New() const final {
    return CreateMaybeMessage<ColorImage>(nullptr);
  }

  ColorImage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ColorImage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ColorImage& from);
  void MergeFrom(const ColorImage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ColorImage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.ColorImage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_framedata_2eproto);
    return ::descriptor_table_framedata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kFormatFieldNumber = 7,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kSizeFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kStridebytesFieldNumber = 6,
  };
  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // string format = 7;
  void clear_format();
  const std::string& format() const;
  void set_format(const std::string& value);
  void set_format(std::string&& value);
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  std::string* mutable_format();
  std::string* release_format();
  void set_allocated_format(std::string* format);
  private:
  const std::string& _internal_format() const;
  void _internal_set_format(const std::string& value);
  std::string* _internal_mutable_format();
  public:

  // int32 width = 2;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::int32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 height = 3;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::int32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 size = 4;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 timestamp = 5;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 stridebytes = 6;
  void clear_stridebytes();
  ::PROTOBUF_NAMESPACE_ID::int32 stridebytes() const;
  void set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_stridebytes() const;
  void _internal_set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.ColorImage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr format_;
  ::PROTOBUF_NAMESPACE_ID::int32 width_;
  ::PROTOBUF_NAMESPACE_ID::int32 height_;
  ::PROTOBUF_NAMESPACE_ID::uint64 size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 stridebytes_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_framedata_2eproto;
};
// -------------------------------------------------------------------

class DepthImage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.DepthImage) */ {
 public:
  DepthImage();
  virtual ~DepthImage();

  DepthImage(const DepthImage& from);
  DepthImage(DepthImage&& from) noexcept
    : DepthImage() {
    *this = ::std::move(from);
  }

  inline DepthImage& operator=(const DepthImage& from) {
    CopyFrom(from);
    return *this;
  }
  inline DepthImage& operator=(DepthImage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DepthImage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DepthImage* internal_default_instance() {
    return reinterpret_cast<const DepthImage*>(
               &_DepthImage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DepthImage& a, DepthImage& b) {
    a.Swap(&b);
  }
  inline void Swap(DepthImage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DepthImage* New() const final {
    return CreateMaybeMessage<DepthImage>(nullptr);
  }

  DepthImage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DepthImage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DepthImage& from);
  void MergeFrom(const DepthImage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DepthImage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.DepthImage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_framedata_2eproto);
    return ::descriptor_table_framedata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kFormatFieldNumber = 7,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kSizeFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kStridebytesFieldNumber = 6,
  };
  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // string format = 7;
  void clear_format();
  const std::string& format() const;
  void set_format(const std::string& value);
  void set_format(std::string&& value);
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  std::string* mutable_format();
  std::string* release_format();
  void set_allocated_format(std::string* format);
  private:
  const std::string& _internal_format() const;
  void _internal_set_format(const std::string& value);
  std::string* _internal_mutable_format();
  public:

  // int32 width = 2;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::int32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 height = 3;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::int32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 size = 4;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 timestamp = 5;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 stridebytes = 6;
  void clear_stridebytes();
  ::PROTOBUF_NAMESPACE_ID::int32 stridebytes() const;
  void set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_stridebytes() const;
  void _internal_set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.DepthImage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr format_;
  ::PROTOBUF_NAMESPACE_ID::int32 width_;
  ::PROTOBUF_NAMESPACE_ID::int32 height_;
  ::PROTOBUF_NAMESPACE_ID::uint64 size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 stridebytes_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_framedata_2eproto;
};
// -------------------------------------------------------------------

class FrameData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.FrameData) */ {
 public:
  FrameData();
  virtual ~FrameData();

  FrameData(const FrameData& from);
  FrameData(FrameData&& from) noexcept
    : FrameData() {
    *this = ::std::move(from);
  }

  inline FrameData& operator=(const FrameData& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameData& operator=(FrameData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FrameData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrameData* internal_default_instance() {
    return reinterpret_cast<const FrameData*>(
               &_FrameData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FrameData& a, FrameData& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FrameData* New() const final {
    return CreateMaybeMessage<FrameData>(nullptr);
  }

  FrameData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FrameData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FrameData& from);
  void MergeFrom(const FrameData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.FrameData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_framedata_2eproto);
    return ::descriptor_table_framedata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColorImageFieldNumber = 1,
    kDepthImageFieldNumber = 2,
  };
  // .proto.ColorImage colorImage = 1;
  bool has_colorimage() const;
  private:
  bool _internal_has_colorimage() const;
  public:
  void clear_colorimage();
  const ::proto::ColorImage& colorimage() const;
  ::proto::ColorImage* release_colorimage();
  ::proto::ColorImage* mutable_colorimage();
  void set_allocated_colorimage(::proto::ColorImage* colorimage);
  private:
  const ::proto::ColorImage& _internal_colorimage() const;
  ::proto::ColorImage* _internal_mutable_colorimage();
  public:

  // .proto.DepthImage depthImage = 2;
  bool has_depthimage() const;
  private:
  bool _internal_has_depthimage() const;
  public:
  void clear_depthimage();
  const ::proto::DepthImage& depthimage() const;
  ::proto::DepthImage* release_depthimage();
  ::proto::DepthImage* mutable_depthimage();
  void set_allocated_depthimage(::proto::DepthImage* depthimage);
  private:
  const ::proto::DepthImage& _internal_depthimage() const;
  ::proto::DepthImage* _internal_mutable_depthimage();
  public:

  // @@protoc_insertion_point(class_scope:proto.FrameData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ColorImage* colorimage_;
  ::proto::DepthImage* depthimage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_framedata_2eproto;
};
// -------------------------------------------------------------------

class Intrinsics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.Intrinsics) */ {
 public:
  Intrinsics();
  virtual ~Intrinsics();

  Intrinsics(const Intrinsics& from);
  Intrinsics(Intrinsics&& from) noexcept
    : Intrinsics() {
    *this = ::std::move(from);
  }

  inline Intrinsics& operator=(const Intrinsics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Intrinsics& operator=(Intrinsics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Intrinsics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intrinsics* internal_default_instance() {
    return reinterpret_cast<const Intrinsics*>(
               &_Intrinsics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Intrinsics& a, Intrinsics& b) {
    a.Swap(&b);
  }
  inline void Swap(Intrinsics* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Intrinsics* New() const final {
    return CreateMaybeMessage<Intrinsics>(nullptr);
  }

  Intrinsics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Intrinsics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Intrinsics& from);
  void MergeFrom(const Intrinsics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Intrinsics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.Intrinsics";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_framedata_2eproto);
    return ::descriptor_table_framedata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
    kCxFieldNumber = 3,
    kCyFieldNumber = 4,
    kFxFieldNumber = 5,
    kFyFieldNumber = 6,
    kK1FieldNumber = 7,
    kK2FieldNumber = 8,
    kK3FieldNumber = 9,
    kK4FieldNumber = 10,
    kK5FieldNumber = 11,
    kK6FieldNumber = 12,
    kCodxFieldNumber = 13,
    kCodyFieldNumber = 14,
    kP1FieldNumber = 15,
    kP2FieldNumber = 16,
    kMetricRadiusFieldNumber = 17,
  };
  // int32 width = 1;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::int32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 height = 2;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::int32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double cx = 3;
  void clear_cx();
  double cx() const;
  void set_cx(double value);
  private:
  double _internal_cx() const;
  void _internal_set_cx(double value);
  public:

  // double cy = 4;
  void clear_cy();
  double cy() const;
  void set_cy(double value);
  private:
  double _internal_cy() const;
  void _internal_set_cy(double value);
  public:

  // double fx = 5;
  void clear_fx();
  double fx() const;
  void set_fx(double value);
  private:
  double _internal_fx() const;
  void _internal_set_fx(double value);
  public:

  // double fy = 6;
  void clear_fy();
  double fy() const;
  void set_fy(double value);
  private:
  double _internal_fy() const;
  void _internal_set_fy(double value);
  public:

  // double k1 = 7;
  void clear_k1();
  double k1() const;
  void set_k1(double value);
  private:
  double _internal_k1() const;
  void _internal_set_k1(double value);
  public:

  // double k2 = 8;
  void clear_k2();
  double k2() const;
  void set_k2(double value);
  private:
  double _internal_k2() const;
  void _internal_set_k2(double value);
  public:

  // double k3 = 9;
  void clear_k3();
  double k3() const;
  void set_k3(double value);
  private:
  double _internal_k3() const;
  void _internal_set_k3(double value);
  public:

  // double k4 = 10;
  void clear_k4();
  double k4() const;
  void set_k4(double value);
  private:
  double _internal_k4() const;
  void _internal_set_k4(double value);
  public:

  // double k5 = 11;
  void clear_k5();
  double k5() const;
  void set_k5(double value);
  private:
  double _internal_k5() const;
  void _internal_set_k5(double value);
  public:

  // double k6 = 12;
  void clear_k6();
  double k6() const;
  void set_k6(double value);
  private:
  double _internal_k6() const;
  void _internal_set_k6(double value);
  public:

  // double codx = 13;
  void clear_codx();
  double codx() const;
  void set_codx(double value);
  private:
  double _internal_codx() const;
  void _internal_set_codx(double value);
  public:

  // double cody = 14;
  void clear_cody();
  double cody() const;
  void set_cody(double value);
  private:
  double _internal_cody() const;
  void _internal_set_cody(double value);
  public:

  // double p1 = 15;
  void clear_p1();
  double p1() const;
  void set_p1(double value);
  private:
  double _internal_p1() const;
  void _internal_set_p1(double value);
  public:

  // double p2 = 16;
  void clear_p2();
  double p2() const;
  void set_p2(double value);
  private:
  double _internal_p2() const;
  void _internal_set_p2(double value);
  public:

  // double metric_radius = 17;
  void clear_metric_radius();
  double metric_radius() const;
  void set_metric_radius(double value);
  private:
  double _internal_metric_radius() const;
  void _internal_set_metric_radius(double value);
  public:

  // @@protoc_insertion_point(class_scope:proto.Intrinsics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 width_;
  ::PROTOBUF_NAMESPACE_ID::int32 height_;
  double cx_;
  double cy_;
  double fx_;
  double fy_;
  double k1_;
  double k2_;
  double k3_;
  double k4_;
  double k5_;
  double k6_;
  double codx_;
  double cody_;
  double p1_;
  double p2_;
  double metric_radius_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_framedata_2eproto;
};
// -------------------------------------------------------------------

class Calibration :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.Calibration) */ {
 public:
  Calibration();
  virtual ~Calibration();

  Calibration(const Calibration& from);
  Calibration(Calibration&& from) noexcept
    : Calibration() {
    *this = ::std::move(from);
  }

  inline Calibration& operator=(const Calibration& from) {
    CopyFrom(from);
    return *this;
  }
  inline Calibration& operator=(Calibration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Calibration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Calibration* internal_default_instance() {
    return reinterpret_cast<const Calibration*>(
               &_Calibration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Calibration& a, Calibration& b) {
    a.Swap(&b);
  }
  inline void Swap(Calibration* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Calibration* New() const final {
    return CreateMaybeMessage<Calibration>(nullptr);
  }

  Calibration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Calibration>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Calibration& from);
  void MergeFrom(const Calibration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Calibration* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.Calibration";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_framedata_2eproto);
    return ::descriptor_table_framedata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kLengthFieldNumber = 2,
  };
  // string data = 1;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // uint32 length = 2;
  void clear_length();
  ::PROTOBUF_NAMESPACE_ID::uint32 length() const;
  void set_length(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_length() const;
  void _internal_set_length(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.Calibration)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 length_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_framedata_2eproto;
};
// -------------------------------------------------------------------

class Data :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }
  inline void Swap(Data* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const final {
    return CreateMaybeMessage<Data>(nullptr);
  }

  Data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.Data";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_framedata_2eproto);
    return ::descriptor_table_framedata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // uint64 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.Data)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_framedata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ColorImage

// bytes data = 1;
inline void ColorImage::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ColorImage::data() const {
  // @@protoc_insertion_point(field_get:proto.ColorImage.data)
  return _internal_data();
}
inline void ColorImage::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:proto.ColorImage.data)
}
inline std::string* ColorImage::mutable_data() {
  // @@protoc_insertion_point(field_mutable:proto.ColorImage.data)
  return _internal_mutable_data();
}
inline const std::string& ColorImage::_internal_data() const {
  return data_.GetNoArena();
}
inline void ColorImage::_internal_set_data(const std::string& value) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ColorImage::set_data(std::string&& value) {
  
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ColorImage.data)
}
inline void ColorImage::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ColorImage.data)
}
inline void ColorImage::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ColorImage.data)
}
inline std::string* ColorImage::_internal_mutable_data() {
  
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ColorImage::release_data() {
  // @@protoc_insertion_point(field_release:proto.ColorImage.data)
  
  return data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ColorImage::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.ColorImage.data)
}

// int32 width = 2;
inline void ColorImage::clear_width() {
  width_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ColorImage::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ColorImage::width() const {
  // @@protoc_insertion_point(field_get:proto.ColorImage.width)
  return _internal_width();
}
inline void ColorImage::_internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  width_ = value;
}
inline void ColorImage::set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:proto.ColorImage.width)
}

// int32 height = 3;
inline void ColorImage::clear_height() {
  height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ColorImage::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ColorImage::height() const {
  // @@protoc_insertion_point(field_get:proto.ColorImage.height)
  return _internal_height();
}
inline void ColorImage::_internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  height_ = value;
}
inline void ColorImage::set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:proto.ColorImage.height)
}

// uint64 size = 4;
inline void ColorImage::clear_size() {
  size_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ColorImage::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ColorImage::size() const {
  // @@protoc_insertion_point(field_get:proto.ColorImage.size)
  return _internal_size();
}
inline void ColorImage::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  size_ = value;
}
inline void ColorImage::set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:proto.ColorImage.size)
}

// uint64 timestamp = 5;
inline void ColorImage::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ColorImage::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ColorImage::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.ColorImage.timestamp)
  return _internal_timestamp();
}
inline void ColorImage::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void ColorImage::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:proto.ColorImage.timestamp)
}

// int32 stridebytes = 6;
inline void ColorImage::clear_stridebytes() {
  stridebytes_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ColorImage::_internal_stridebytes() const {
  return stridebytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ColorImage::stridebytes() const {
  // @@protoc_insertion_point(field_get:proto.ColorImage.stridebytes)
  return _internal_stridebytes();
}
inline void ColorImage::_internal_set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  stridebytes_ = value;
}
inline void ColorImage::set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_stridebytes(value);
  // @@protoc_insertion_point(field_set:proto.ColorImage.stridebytes)
}

// string format = 7;
inline void ColorImage::clear_format() {
  format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ColorImage::format() const {
  // @@protoc_insertion_point(field_get:proto.ColorImage.format)
  return _internal_format();
}
inline void ColorImage::set_format(const std::string& value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:proto.ColorImage.format)
}
inline std::string* ColorImage::mutable_format() {
  // @@protoc_insertion_point(field_mutable:proto.ColorImage.format)
  return _internal_mutable_format();
}
inline const std::string& ColorImage::_internal_format() const {
  return format_.GetNoArena();
}
inline void ColorImage::_internal_set_format(const std::string& value) {
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ColorImage::set_format(std::string&& value) {
  
  format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ColorImage.format)
}
inline void ColorImage::set_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ColorImage.format)
}
inline void ColorImage::set_format(const char* value, size_t size) {
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ColorImage.format)
}
inline std::string* ColorImage::_internal_mutable_format() {
  
  return format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ColorImage::release_format() {
  // @@protoc_insertion_point(field_release:proto.ColorImage.format)
  
  return format_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ColorImage::set_allocated_format(std::string* format) {
  if (format != nullptr) {
    
  } else {
    
  }
  format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:proto.ColorImage.format)
}

// -------------------------------------------------------------------

// DepthImage

// bytes data = 1;
inline void DepthImage::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DepthImage::data() const {
  // @@protoc_insertion_point(field_get:proto.DepthImage.data)
  return _internal_data();
}
inline void DepthImage::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:proto.DepthImage.data)
}
inline std::string* DepthImage::mutable_data() {
  // @@protoc_insertion_point(field_mutable:proto.DepthImage.data)
  return _internal_mutable_data();
}
inline const std::string& DepthImage::_internal_data() const {
  return data_.GetNoArena();
}
inline void DepthImage::_internal_set_data(const std::string& value) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DepthImage::set_data(std::string&& value) {
  
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DepthImage.data)
}
inline void DepthImage::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DepthImage.data)
}
inline void DepthImage::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DepthImage.data)
}
inline std::string* DepthImage::_internal_mutable_data() {
  
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DepthImage::release_data() {
  // @@protoc_insertion_point(field_release:proto.DepthImage.data)
  
  return data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DepthImage::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.DepthImage.data)
}

// int32 width = 2;
inline void DepthImage::clear_width() {
  width_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DepthImage::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DepthImage::width() const {
  // @@protoc_insertion_point(field_get:proto.DepthImage.width)
  return _internal_width();
}
inline void DepthImage::_internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  width_ = value;
}
inline void DepthImage::set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:proto.DepthImage.width)
}

// int32 height = 3;
inline void DepthImage::clear_height() {
  height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DepthImage::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DepthImage::height() const {
  // @@protoc_insertion_point(field_get:proto.DepthImage.height)
  return _internal_height();
}
inline void DepthImage::_internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  height_ = value;
}
inline void DepthImage::set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:proto.DepthImage.height)
}

// uint64 size = 4;
inline void DepthImage::clear_size() {
  size_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DepthImage::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DepthImage::size() const {
  // @@protoc_insertion_point(field_get:proto.DepthImage.size)
  return _internal_size();
}
inline void DepthImage::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  size_ = value;
}
inline void DepthImage::set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:proto.DepthImage.size)
}

// uint64 timestamp = 5;
inline void DepthImage::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DepthImage::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DepthImage::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.DepthImage.timestamp)
  return _internal_timestamp();
}
inline void DepthImage::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void DepthImage::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:proto.DepthImage.timestamp)
}

// int32 stridebytes = 6;
inline void DepthImage::clear_stridebytes() {
  stridebytes_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DepthImage::_internal_stridebytes() const {
  return stridebytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DepthImage::stridebytes() const {
  // @@protoc_insertion_point(field_get:proto.DepthImage.stridebytes)
  return _internal_stridebytes();
}
inline void DepthImage::_internal_set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  stridebytes_ = value;
}
inline void DepthImage::set_stridebytes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_stridebytes(value);
  // @@protoc_insertion_point(field_set:proto.DepthImage.stridebytes)
}

// string format = 7;
inline void DepthImage::clear_format() {
  format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DepthImage::format() const {
  // @@protoc_insertion_point(field_get:proto.DepthImage.format)
  return _internal_format();
}
inline void DepthImage::set_format(const std::string& value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:proto.DepthImage.format)
}
inline std::string* DepthImage::mutable_format() {
  // @@protoc_insertion_point(field_mutable:proto.DepthImage.format)
  return _internal_mutable_format();
}
inline const std::string& DepthImage::_internal_format() const {
  return format_.GetNoArena();
}
inline void DepthImage::_internal_set_format(const std::string& value) {
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DepthImage::set_format(std::string&& value) {
  
  format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DepthImage.format)
}
inline void DepthImage::set_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DepthImage.format)
}
inline void DepthImage::set_format(const char* value, size_t size) {
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DepthImage.format)
}
inline std::string* DepthImage::_internal_mutable_format() {
  
  return format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DepthImage::release_format() {
  // @@protoc_insertion_point(field_release:proto.DepthImage.format)
  
  return format_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DepthImage::set_allocated_format(std::string* format) {
  if (format != nullptr) {
    
  } else {
    
  }
  format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:proto.DepthImage.format)
}

// -------------------------------------------------------------------

// FrameData

// .proto.ColorImage colorImage = 1;
inline bool FrameData::_internal_has_colorimage() const {
  return this != internal_default_instance() && colorimage_ != nullptr;
}
inline bool FrameData::has_colorimage() const {
  return _internal_has_colorimage();
}
inline void FrameData::clear_colorimage() {
  if (GetArenaNoVirtual() == nullptr && colorimage_ != nullptr) {
    delete colorimage_;
  }
  colorimage_ = nullptr;
}
inline const ::proto::ColorImage& FrameData::_internal_colorimage() const {
  const ::proto::ColorImage* p = colorimage_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::ColorImage*>(
      &::proto::_ColorImage_default_instance_);
}
inline const ::proto::ColorImage& FrameData::colorimage() const {
  // @@protoc_insertion_point(field_get:proto.FrameData.colorImage)
  return _internal_colorimage();
}
inline ::proto::ColorImage* FrameData::release_colorimage() {
  // @@protoc_insertion_point(field_release:proto.FrameData.colorImage)
  
  ::proto::ColorImage* temp = colorimage_;
  colorimage_ = nullptr;
  return temp;
}
inline ::proto::ColorImage* FrameData::_internal_mutable_colorimage() {
  
  if (colorimage_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::ColorImage>(GetArenaNoVirtual());
    colorimage_ = p;
  }
  return colorimage_;
}
inline ::proto::ColorImage* FrameData::mutable_colorimage() {
  // @@protoc_insertion_point(field_mutable:proto.FrameData.colorImage)
  return _internal_mutable_colorimage();
}
inline void FrameData::set_allocated_colorimage(::proto::ColorImage* colorimage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete colorimage_;
  }
  if (colorimage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      colorimage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, colorimage, submessage_arena);
    }
    
  } else {
    
  }
  colorimage_ = colorimage;
  // @@protoc_insertion_point(field_set_allocated:proto.FrameData.colorImage)
}

// .proto.DepthImage depthImage = 2;
inline bool FrameData::_internal_has_depthimage() const {
  return this != internal_default_instance() && depthimage_ != nullptr;
}
inline bool FrameData::has_depthimage() const {
  return _internal_has_depthimage();
}
inline void FrameData::clear_depthimage() {
  if (GetArenaNoVirtual() == nullptr && depthimage_ != nullptr) {
    delete depthimage_;
  }
  depthimage_ = nullptr;
}
inline const ::proto::DepthImage& FrameData::_internal_depthimage() const {
  const ::proto::DepthImage* p = depthimage_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::DepthImage*>(
      &::proto::_DepthImage_default_instance_);
}
inline const ::proto::DepthImage& FrameData::depthimage() const {
  // @@protoc_insertion_point(field_get:proto.FrameData.depthImage)
  return _internal_depthimage();
}
inline ::proto::DepthImage* FrameData::release_depthimage() {
  // @@protoc_insertion_point(field_release:proto.FrameData.depthImage)
  
  ::proto::DepthImage* temp = depthimage_;
  depthimage_ = nullptr;
  return temp;
}
inline ::proto::DepthImage* FrameData::_internal_mutable_depthimage() {
  
  if (depthimage_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::DepthImage>(GetArenaNoVirtual());
    depthimage_ = p;
  }
  return depthimage_;
}
inline ::proto::DepthImage* FrameData::mutable_depthimage() {
  // @@protoc_insertion_point(field_mutable:proto.FrameData.depthImage)
  return _internal_mutable_depthimage();
}
inline void FrameData::set_allocated_depthimage(::proto::DepthImage* depthimage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete depthimage_;
  }
  if (depthimage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      depthimage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, depthimage, submessage_arena);
    }
    
  } else {
    
  }
  depthimage_ = depthimage;
  // @@protoc_insertion_point(field_set_allocated:proto.FrameData.depthImage)
}

// -------------------------------------------------------------------

// Intrinsics

// int32 width = 1;
inline void Intrinsics::clear_width() {
  width_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Intrinsics::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Intrinsics::width() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.width)
  return _internal_width();
}
inline void Intrinsics::_internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  width_ = value;
}
inline void Intrinsics::set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.width)
}

// int32 height = 2;
inline void Intrinsics::clear_height() {
  height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Intrinsics::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Intrinsics::height() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.height)
  return _internal_height();
}
inline void Intrinsics::_internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  height_ = value;
}
inline void Intrinsics::set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.height)
}

// double cx = 3;
inline void Intrinsics::clear_cx() {
  cx_ = 0;
}
inline double Intrinsics::_internal_cx() const {
  return cx_;
}
inline double Intrinsics::cx() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.cx)
  return _internal_cx();
}
inline void Intrinsics::_internal_set_cx(double value) {
  
  cx_ = value;
}
inline void Intrinsics::set_cx(double value) {
  _internal_set_cx(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.cx)
}

// double cy = 4;
inline void Intrinsics::clear_cy() {
  cy_ = 0;
}
inline double Intrinsics::_internal_cy() const {
  return cy_;
}
inline double Intrinsics::cy() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.cy)
  return _internal_cy();
}
inline void Intrinsics::_internal_set_cy(double value) {
  
  cy_ = value;
}
inline void Intrinsics::set_cy(double value) {
  _internal_set_cy(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.cy)
}

// double fx = 5;
inline void Intrinsics::clear_fx() {
  fx_ = 0;
}
inline double Intrinsics::_internal_fx() const {
  return fx_;
}
inline double Intrinsics::fx() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.fx)
  return _internal_fx();
}
inline void Intrinsics::_internal_set_fx(double value) {
  
  fx_ = value;
}
inline void Intrinsics::set_fx(double value) {
  _internal_set_fx(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.fx)
}

// double fy = 6;
inline void Intrinsics::clear_fy() {
  fy_ = 0;
}
inline double Intrinsics::_internal_fy() const {
  return fy_;
}
inline double Intrinsics::fy() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.fy)
  return _internal_fy();
}
inline void Intrinsics::_internal_set_fy(double value) {
  
  fy_ = value;
}
inline void Intrinsics::set_fy(double value) {
  _internal_set_fy(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.fy)
}

// double k1 = 7;
inline void Intrinsics::clear_k1() {
  k1_ = 0;
}
inline double Intrinsics::_internal_k1() const {
  return k1_;
}
inline double Intrinsics::k1() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.k1)
  return _internal_k1();
}
inline void Intrinsics::_internal_set_k1(double value) {
  
  k1_ = value;
}
inline void Intrinsics::set_k1(double value) {
  _internal_set_k1(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.k1)
}

// double k2 = 8;
inline void Intrinsics::clear_k2() {
  k2_ = 0;
}
inline double Intrinsics::_internal_k2() const {
  return k2_;
}
inline double Intrinsics::k2() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.k2)
  return _internal_k2();
}
inline void Intrinsics::_internal_set_k2(double value) {
  
  k2_ = value;
}
inline void Intrinsics::set_k2(double value) {
  _internal_set_k2(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.k2)
}

// double k3 = 9;
inline void Intrinsics::clear_k3() {
  k3_ = 0;
}
inline double Intrinsics::_internal_k3() const {
  return k3_;
}
inline double Intrinsics::k3() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.k3)
  return _internal_k3();
}
inline void Intrinsics::_internal_set_k3(double value) {
  
  k3_ = value;
}
inline void Intrinsics::set_k3(double value) {
  _internal_set_k3(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.k3)
}

// double k4 = 10;
inline void Intrinsics::clear_k4() {
  k4_ = 0;
}
inline double Intrinsics::_internal_k4() const {
  return k4_;
}
inline double Intrinsics::k4() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.k4)
  return _internal_k4();
}
inline void Intrinsics::_internal_set_k4(double value) {
  
  k4_ = value;
}
inline void Intrinsics::set_k4(double value) {
  _internal_set_k4(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.k4)
}

// double k5 = 11;
inline void Intrinsics::clear_k5() {
  k5_ = 0;
}
inline double Intrinsics::_internal_k5() const {
  return k5_;
}
inline double Intrinsics::k5() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.k5)
  return _internal_k5();
}
inline void Intrinsics::_internal_set_k5(double value) {
  
  k5_ = value;
}
inline void Intrinsics::set_k5(double value) {
  _internal_set_k5(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.k5)
}

// double k6 = 12;
inline void Intrinsics::clear_k6() {
  k6_ = 0;
}
inline double Intrinsics::_internal_k6() const {
  return k6_;
}
inline double Intrinsics::k6() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.k6)
  return _internal_k6();
}
inline void Intrinsics::_internal_set_k6(double value) {
  
  k6_ = value;
}
inline void Intrinsics::set_k6(double value) {
  _internal_set_k6(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.k6)
}

// double codx = 13;
inline void Intrinsics::clear_codx() {
  codx_ = 0;
}
inline double Intrinsics::_internal_codx() const {
  return codx_;
}
inline double Intrinsics::codx() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.codx)
  return _internal_codx();
}
inline void Intrinsics::_internal_set_codx(double value) {
  
  codx_ = value;
}
inline void Intrinsics::set_codx(double value) {
  _internal_set_codx(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.codx)
}

// double cody = 14;
inline void Intrinsics::clear_cody() {
  cody_ = 0;
}
inline double Intrinsics::_internal_cody() const {
  return cody_;
}
inline double Intrinsics::cody() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.cody)
  return _internal_cody();
}
inline void Intrinsics::_internal_set_cody(double value) {
  
  cody_ = value;
}
inline void Intrinsics::set_cody(double value) {
  _internal_set_cody(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.cody)
}

// double p1 = 15;
inline void Intrinsics::clear_p1() {
  p1_ = 0;
}
inline double Intrinsics::_internal_p1() const {
  return p1_;
}
inline double Intrinsics::p1() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.p1)
  return _internal_p1();
}
inline void Intrinsics::_internal_set_p1(double value) {
  
  p1_ = value;
}
inline void Intrinsics::set_p1(double value) {
  _internal_set_p1(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.p1)
}

// double p2 = 16;
inline void Intrinsics::clear_p2() {
  p2_ = 0;
}
inline double Intrinsics::_internal_p2() const {
  return p2_;
}
inline double Intrinsics::p2() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.p2)
  return _internal_p2();
}
inline void Intrinsics::_internal_set_p2(double value) {
  
  p2_ = value;
}
inline void Intrinsics::set_p2(double value) {
  _internal_set_p2(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.p2)
}

// double metric_radius = 17;
inline void Intrinsics::clear_metric_radius() {
  metric_radius_ = 0;
}
inline double Intrinsics::_internal_metric_radius() const {
  return metric_radius_;
}
inline double Intrinsics::metric_radius() const {
  // @@protoc_insertion_point(field_get:proto.Intrinsics.metric_radius)
  return _internal_metric_radius();
}
inline void Intrinsics::_internal_set_metric_radius(double value) {
  
  metric_radius_ = value;
}
inline void Intrinsics::set_metric_radius(double value) {
  _internal_set_metric_radius(value);
  // @@protoc_insertion_point(field_set:proto.Intrinsics.metric_radius)
}

// -------------------------------------------------------------------

// Calibration

// string data = 1;
inline void Calibration::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Calibration::data() const {
  // @@protoc_insertion_point(field_get:proto.Calibration.data)
  return _internal_data();
}
inline void Calibration::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:proto.Calibration.data)
}
inline std::string* Calibration::mutable_data() {
  // @@protoc_insertion_point(field_mutable:proto.Calibration.data)
  return _internal_mutable_data();
}
inline const std::string& Calibration::_internal_data() const {
  return data_.GetNoArena();
}
inline void Calibration::_internal_set_data(const std::string& value) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Calibration::set_data(std::string&& value) {
  
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Calibration.data)
}
inline void Calibration::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Calibration.data)
}
inline void Calibration::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Calibration.data)
}
inline std::string* Calibration::_internal_mutable_data() {
  
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Calibration::release_data() {
  // @@protoc_insertion_point(field_release:proto.Calibration.data)
  
  return data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Calibration::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.Calibration.data)
}

// uint32 length = 2;
inline void Calibration::clear_length() {
  length_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Calibration::_internal_length() const {
  return length_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Calibration::length() const {
  // @@protoc_insertion_point(field_get:proto.Calibration.length)
  return _internal_length();
}
inline void Calibration::_internal_set_length(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  length_ = value;
}
inline void Calibration::set_length(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:proto.Calibration.length)
}

// -------------------------------------------------------------------

// Data

// bytes data = 1;
inline void Data::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Data::data() const {
  // @@protoc_insertion_point(field_get:proto.Data.data)
  return _internal_data();
}
inline void Data::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:proto.Data.data)
}
inline std::string* Data::mutable_data() {
  // @@protoc_insertion_point(field_mutable:proto.Data.data)
  return _internal_mutable_data();
}
inline const std::string& Data::_internal_data() const {
  return data_.GetNoArena();
}
inline void Data::_internal_set_data(const std::string& value) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Data::set_data(std::string&& value) {
  
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Data.data)
}
inline void Data::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Data.data)
}
inline void Data::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Data.data)
}
inline std::string* Data::_internal_mutable_data() {
  
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Data::release_data() {
  // @@protoc_insertion_point(field_release:proto.Data.data)
  
  return data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Data::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.Data.data)
}

// uint64 size = 2;
inline void Data::clear_size() {
  size_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Data::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Data::size() const {
  // @@protoc_insertion_point(field_get:proto.Data.size)
  return _internal_size();
}
inline void Data::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  size_ = value;
}
inline void Data::set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:proto.Data.size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_framedata_2eproto
